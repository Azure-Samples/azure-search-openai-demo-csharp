@using Bunit
@using Bunit.TestDoubles
@using ClientApp.Components
@using Microsoft.Extensions.DependencyInjection
@using MudBlazor.Interop
@using MudBlazor.Services

@inherits TestContext

@code {
    private void Arrange()
    {
        JSInterop.SetupVoid("mudKeyInterceptor.connect", _ => true);
        JSInterop.Setup<BoundingClientRect>("mudElementRef.getBoundingClientRect", _ => true);

        Services.AddMudServices();
    }

    [Fact]
    public void LoadingComponentDefaultRenderCorrectly()
    {
        Arrange();        

        var cut = Render(@<Loading />);

        cut.MarkupMatches(
            @"<h5 class=""mud-typography mud-typography-h5 mud-secondary-text pb-2"">🤖 I'm thinking...</h5>
            <div class=""mud-progress-circular mud-secondary-text mud-progress-medium mud-progress-indeterminate pb-4"" role=""progressbar"" aria-valuenow=""0"">
            <svg class=""mud-progress-circular-svg"" viewBox=""22 22 44 44"">
                <circle class=""mud-progress-circular-circle mud-progress-indeterminate"" cx=""44"" cy=""44"" r=""20"" fill=""none"" stroke-width=""3""></circle>
            </svg>
            </div>"
        );
    }

    [Fact]
    public void LoadingComponentParameterRenderCorrectly()
    {
        Arrange();

        var cut = Render(@<Loading BusyMessage="Loading, please wait..." />);

        cut.MarkupMatches(
            @"<h5 class=""mud-typography mud-typography-h5 mud-secondary-text pb-2"">Loading, please wait...</h5>
            <div class=""mud-progress-circular mud-secondary-text mud-progress-medium mud-progress-indeterminate pb-4"" role=""progressbar"" aria-valuenow=""0"">
            <svg class=""mud-progress-circular-svg"" viewBox=""22 22 44 44"">
                <circle class=""mud-progress-circular-circle mud-progress-indeterminate"" cx=""44"" cy=""44"" r=""20"" fill=""none"" stroke-width=""3""></circle>
            </svg>
            </div>"
        );
    }
}
